//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Operators.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback OperatorLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientsPerGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOperatorLogsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::Operators.Properties.Settings.Default.Operators_localhost_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event OperatorLoginCompletedEventHandler OperatorLoginCompleted;
        
        /// <remarks/>
        public event GetDomainsCompletedEventHandler GetDomainsCompleted;
        
        /// <remarks/>
        public event GetClientsPerGroupCompletedEventHandler GetClientsPerGroupCompleted;
        
        /// <remarks/>
        public event AddNewDomainCompletedEventHandler AddNewDomainCompleted;
        
        /// <remarks/>
        public event EditDomainCompletedEventHandler EditDomainCompleted;
        
        /// <remarks/>
        public event DeleteDomainCompletedEventHandler DeleteDomainCompleted;
        
        /// <remarks/>
        public event GetOperatorLogsCompletedEventHandler GetOperatorLogsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OperatorLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OperatorLogin(string userName, string passWord) {
            object[] results = this.Invoke("OperatorLogin", new object[] {
                        userName,
                        passWord});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OperatorLoginAsync(string userName, string passWord) {
            this.OperatorLoginAsync(userName, passWord, null);
        }
        
        /// <remarks/>
        public void OperatorLoginAsync(string userName, string passWord, object userState) {
            if ((this.OperatorLoginOperationCompleted == null)) {
                this.OperatorLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOperatorLoginOperationCompleted);
            }
            this.InvokeAsync("OperatorLogin", new object[] {
                        userName,
                        passWord}, this.OperatorLoginOperationCompleted, userState);
        }
        
        private void OnOperatorLoginOperationCompleted(object arg) {
            if ((this.OperatorLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OperatorLoginCompleted(this, new OperatorLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDomains", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDomains() {
            object[] results = this.Invoke("GetDomains", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainsAsync() {
            this.GetDomainsAsync(null);
        }
        
        /// <remarks/>
        public void GetDomainsAsync(object userState) {
            if ((this.GetDomainsOperationCompleted == null)) {
                this.GetDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainsOperationCompleted);
            }
            this.InvokeAsync("GetDomains", new object[0], this.GetDomainsOperationCompleted, userState);
        }
        
        private void OnGetDomainsOperationCompleted(object arg) {
            if ((this.GetDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainsCompleted(this, new GetDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetClientsPerGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetClientsPerGroup(int GroupID) {
            object[] results = this.Invoke("GetClientsPerGroup", new object[] {
                        GroupID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClientsPerGroupAsync(int GroupID) {
            this.GetClientsPerGroupAsync(GroupID, null);
        }
        
        /// <remarks/>
        public void GetClientsPerGroupAsync(int GroupID, object userState) {
            if ((this.GetClientsPerGroupOperationCompleted == null)) {
                this.GetClientsPerGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientsPerGroupOperationCompleted);
            }
            this.InvokeAsync("GetClientsPerGroup", new object[] {
                        GroupID}, this.GetClientsPerGroupOperationCompleted, userState);
        }
        
        private void OnGetClientsPerGroupOperationCompleted(object arg) {
            if ((this.GetClientsPerGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientsPerGroupCompleted(this, new GetClientsPerGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewDomain(string operatorName, int ID, string Domain) {
            this.Invoke("AddNewDomain", new object[] {
                        operatorName,
                        ID,
                        Domain});
        }
        
        /// <remarks/>
        public void AddNewDomainAsync(string operatorName, int ID, string Domain) {
            this.AddNewDomainAsync(operatorName, ID, Domain, null);
        }
        
        /// <remarks/>
        public void AddNewDomainAsync(string operatorName, int ID, string Domain, object userState) {
            if ((this.AddNewDomainOperationCompleted == null)) {
                this.AddNewDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewDomainOperationCompleted);
            }
            this.InvokeAsync("AddNewDomain", new object[] {
                        operatorName,
                        ID,
                        Domain}, this.AddNewDomainOperationCompleted, userState);
        }
        
        private void OnAddNewDomainOperationCompleted(object arg) {
            if ((this.AddNewDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EditDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EditDomain(string operatorName, int ID, string OrigDomain, string newDomain) {
            this.Invoke("EditDomain", new object[] {
                        operatorName,
                        ID,
                        OrigDomain,
                        newDomain});
        }
        
        /// <remarks/>
        public void EditDomainAsync(string operatorName, int ID, string OrigDomain, string newDomain) {
            this.EditDomainAsync(operatorName, ID, OrigDomain, newDomain, null);
        }
        
        /// <remarks/>
        public void EditDomainAsync(string operatorName, int ID, string OrigDomain, string newDomain, object userState) {
            if ((this.EditDomainOperationCompleted == null)) {
                this.EditDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditDomainOperationCompleted);
            }
            this.InvokeAsync("EditDomain", new object[] {
                        operatorName,
                        ID,
                        OrigDomain,
                        newDomain}, this.EditDomainOperationCompleted, userState);
        }
        
        private void OnEditDomainOperationCompleted(object arg) {
            if ((this.EditDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDomain(string operatorName, int ID, string Domain) {
            this.Invoke("DeleteDomain", new object[] {
                        operatorName,
                        ID,
                        Domain});
        }
        
        /// <remarks/>
        public void DeleteDomainAsync(string operatorName, int ID, string Domain) {
            this.DeleteDomainAsync(operatorName, ID, Domain, null);
        }
        
        /// <remarks/>
        public void DeleteDomainAsync(string operatorName, int ID, string Domain, object userState) {
            if ((this.DeleteDomainOperationCompleted == null)) {
                this.DeleteDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDomainOperationCompleted);
            }
            this.InvokeAsync("DeleteDomain", new object[] {
                        operatorName,
                        ID,
                        Domain}, this.DeleteDomainOperationCompleted, userState);
        }
        
        private void OnDeleteDomainOperationCompleted(object arg) {
            if ((this.DeleteDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDomainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatorLogs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Prop[] GetOperatorLogs() {
            object[] results = this.Invoke("GetOperatorLogs", new object[0]);
            return ((Prop[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOperatorLogsAsync() {
            this.GetOperatorLogsAsync(null);
        }
        
        /// <remarks/>
        public void GetOperatorLogsAsync(object userState) {
            if ((this.GetOperatorLogsOperationCompleted == null)) {
                this.GetOperatorLogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorLogsOperationCompleted);
            }
            this.InvokeAsync("GetOperatorLogs", new object[0], this.GetOperatorLogsOperationCompleted, userState);
        }
        
        private void OnGetOperatorLogsOperationCompleted(object arg) {
            if ((this.GetOperatorLogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperatorLogsCompleted(this, new GetOperatorLogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Prop {
        
        private int idField;
        
        private int groupIDField;
        
        private string operatorNameField;
        
        private string timeField;
        
        private string operatingTypeField;
        
        private string domainField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string OperatorName {
            get {
                return this.operatorNameField;
            }
            set {
                this.operatorNameField = value;
            }
        }
        
        /// <remarks/>
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        public string OperatingType {
            get {
                return this.operatingTypeField;
            }
            set {
                this.operatingTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void OperatorLoginCompletedEventHandler(object sender, OperatorLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OperatorLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OperatorLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetDomainsCompletedEventHandler(object sender, GetDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetClientsPerGroupCompletedEventHandler(object sender, GetClientsPerGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientsPerGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientsPerGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddNewDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void EditDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteDomainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetOperatorLogsCompletedEventHandler(object sender, GetOperatorLogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperatorLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOperatorLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Prop[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Prop[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591